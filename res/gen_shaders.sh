#!/usr/bin/env bash

WORKING_DIR="."
OUTPUT_DIR="${WORKING_DIR}/app/generated"

HEADER="${OUTPUT_DIR}/gen_shaders.h"
SOURCE="${OUTPUT_DIR}/gen_shaders.cpp"
SHADER_DIR="${WORKING_DIR}/res/shaders"

SOURCE_VAR=""
HEADER_VAR=""

SHADER_PROGRAM_T="shader_program_t"
UNIFORM_NAME_T="uniform_name_t  "

process_folder() {
	local DIR=$1
	local PREFIX=${DIR#$SHADER_DIR}
	local PREFIX=${PREFIX#/}

	for f in "$DIR"/*
	do
		if [[ -d $f ]]; then
			process_folder $f
		else
			PROC_FILE_NAME=${f##*/} # remove pathing of file
			PROC_FILE_NAME_NO_EXT=${PROC_FILE_NAME%\.*}
			echo "processing $f"
			HEADER_VAR="${HEADER_VAR}"$'\n\n'"/* generated from ${PREFIX}${PREFIX:+/}${PROC_FILE_NAME} */"
			HEADER_VAR="${HEADER_VAR}"$'\n'"extern ${SHADER_PROGRAM_T} ${PREFIX}${PREFIX:+_}${PROC_FILE_NAME_NO_EXT};"
			
			while read -r uniform ;
			do
				UNIFORM_NAME=${uniform% *=*}	 		# remove every after name decleration
				UNIFORM_NAME=${UNIFORM_NAME%[*}  		# remove possible array tag
				UNIFORM_NAME=${UNIFORM_NAME##* } 		# remove everything before first space
				UNIFORM_NAME="$(echo $UNIFORM_NAME | sed -e 's/^[[:space:]]*//')" 	# remove prefix whitespaces
				if [ -z "$(grep "${UNIFORM_NAME}" <<< "$HEADER_VAR")" ]; then
					# only process non duplicate keys
					HEADER_VAR="${HEADER_VAR}"$'\n'"extern ${UNIFORM_NAME_T} ${UNIFORM_NAME%\;*};"
					SOURCE_VAR="${SOURCE_VAR}"$'\n'"${UNIFORM_NAME_T} ${UNIFORM_NAME%\;*} = \"${UNIFORM_NAME%\;*}\";"
				fi

			done < <(grep '^uniform' $f)

			SOURCE_VAR="${SOURCE_VAR}"$'\n'"${SHADER_PROGRAM_T} ${PROC_FILE_NAME_NO_EXT} = R\"("$'\n'
			SOURCE_VAR="${SOURCE_VAR}$(awk '{printf "\t%s\n", $0}' < $f)"
			SOURCE_VAR="${SOURCE_VAR})\";"$'\n\n'
		fi
	done
}

echo Generating "gen_shaders.cpp & gen_shaders.h"
mkdir -p ${OUTPUT_DIR}
touch ${HEADER}

HEADER_VAR="#ifndef __GEN_SHADERS_H__
#define __GEN_SHADERS_H__

/* File generated by $(basename "$0") */

#ifdef __cplusplus
extern \"C\" {
#endif

/* GSV: Generates Shader Value */
namespace GSV {

typedef const char* const ${SHADER_PROGRAM_T};
typedef const char* const ${UNIFORM_NAME_T};"

SOURCE_VAR="/* File generated by $(basename "$0") */

#include \"${HEADER##*/}\"

#ifdef __cplusplus
extern \"C\" {
#endif

namespace GSV {

"


process_folder "${SHADER_DIR}"

HEADER_VAR="${HEADER_VAR}

}; // namespace GSV

#ifdef __cplusplus
}
#endif

#endif /* __GEN_SHADERS_H__ */"

SOURCE_VAR="${SOURCE_VAR}}; // namespace GSV

#ifdef __cplusplus
}
#endif"

echo "$SOURCE_VAR" > ${SOURCE}

if [[ "$(< $HEADER)" != "$HEADER_VAR" ]]; then
	echo "Updating header"
	echo "$HEADER_VAR" > ${HEADER}
fi
